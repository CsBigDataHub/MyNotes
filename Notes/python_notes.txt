--String Formatting Operator--
One of Python's coolest features is the string format operator %. This operator is unique to strings and makes up for the pack of having functions from C's printf() family. Following is a simple example −

#!/usr/bin/python

print "My name is %s and weight is %d kg!" % ('Zara', 21) 

When the above code is executed, it produces the following result −

My name is Zara and weight is 21 kg!

Here is the list of complete set of symbols which can be used along with % −

Format Symbol	Conversion
%c	character
%s	string conversion via str() prior to formatting
%i	signed decimal integer
%d	signed decimal integer
%u	unsigned decimal integer
%o	octal integer
%x	hexadecimal integer (lowercase letters)
%X	hexadecimal integer (UPPERcase letters)
%e	exponential notation (with lowercase 'e')
%E	exponential notation (with UPPERcase 'E')
%f	floating point real number
%g	the shorter of %f and %e
%G	the shorter of %f and %E

print(str("%2.1f"%i["properties"]["mag"])+"|"+i["properties"]["place"]) 
print(("%2.1f"%i["properties"]["mag"]),i["properties"]["place"])  # here 2.1f represents formatting of the float point


####################---------------------------------###########################
 # to get rid of -- JSON object must be str, not 'bytes' -- error
 theJSON = json.loads(data.decode())

# where 'data' in the above statement is html data, see below code
with urllib.request.urlopen("http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.geojson") as response:
    html = response.read()
    code = response.code
    print(type(html))
    print(code)
  print(code) 
  if (code == 200):
  	data = html
  	printResults(data)
  else:
  	print("server cannot be connected "+str(code))	
##############################################################################

#to convert timestamp to human readable time 
dt = time.ctime(timestamp)
date = datetime.datetime.fromtimestamp(adjusted_timestamp)

##########################################################
##incrementer like i++ in java
i+=1
##############################
operator precedence
() - parantasis
** - exponent
* - multiplication
/ - division
% - modulo
+ - addition
- - subraction
#**********************




